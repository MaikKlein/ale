#!/bin/bash -eu

CURRENT_IMAGE_ID=d5a1b5915b09
IMAGE=w0rp/ale
DOCKER_FLAGS=(--rm -v "$PWD:/testplugin" -v "$PWD/test:/home" "$IMAGE")
EXIT=0

docker images -q w0rp/ale | grep "^$CURRENT_IMAGE_ID" > /dev/null \
    || docker pull "$IMAGE"

for vim in $(docker run --rm "$IMAGE" ls /vim-build/bin | grep '^neovim' ); do
    echo
    echo
    echo '========================================'
    echo "Running tests for $vim"
    echo '========================================'
    echo

    docker run -it -e VADER_OUTPUT_FILE=/dev/stderr "${DOCKER_FLAGS[@]}" \
        "/vim-build/bin/$vim" -u /testplugin/test/vimrc \
        --headless '+Vader! /testplugin/test/*.vader' || EXIT=$?
done

exit 1

for vim in $(docker run --rm "$IMAGE" ls /vim-build/bin | grep '^vim' ); do
    echo
    echo
    echo '========================================'
    echo "Running tests for $vim"
    echo '========================================'
    echo

    docker run -a stderr "${DOCKER_FLAGS[@]}" "$vim" '+Vader! test/*.vader' || EXIT=$?
done

echo
echo '========================================'
echo 'Running Vint to lint our code'
echo '========================================'
echo 'Vint warnings/errors follow:'
echo

set -o pipefail
docker run -a stdout "${DOCKER_FLAGS[@]}" vint -s /testplugin | sed s:^/testplugin/:: || EXIT=$?
set +o pipefail

echo
echo '========================================'
echo 'Running custom checks'
echo '========================================'
echo 'Custom warnings/errors follow:'
echo

set -o pipefail
docker run -a stdout "${DOCKER_FLAGS[@]}" /testplugin/custom-checks /testplugin | sed s:^/testplugin/:: || EXIT=$?
set +o pipefail
echo

exit $EXIT
